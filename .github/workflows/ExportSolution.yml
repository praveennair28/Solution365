name: export-and-branch-solution

# Export solution from DEV environment

#  unpack it and prepare, commit and push a git branch with the changes

 

on:

  workflow_dispatch:

    inputs:
      solution_name:
        description: "Name of the solution in dataverse"
        required: true
        default: TestSolution
      solution_version:
        description: "Version of the solution to export from power platform"
        required: true
        default: v1.0.0.0
      pk_tenantid:
        description: "tenant id of the environment"
        required: true
        default: TestSolution
      environment_url:
        description: "http endpoint of dataverse"
        required: true
        default: "https://orgd6524967.crm8.dynamics.com"
      source_branch:
        description: "source barnch"
        required: true
        default: dev
      branch_to_create:
         description: "branch to create"
         required: false
         default: dev
      commit_message:
          description: "New changes to commit"
          required: true
      allow_empty_commit:
          description: "http endpoint of dataverse"
          required: true
          default: 'false'

env:

#edit your values here

  ENVIRONMENT_URL: 'https://orgd6524967.crm8.dynamics.com/'

  CLIENT_ID: '277fac91-2641-4aee-952a-0e0dc026b695'

  TENANT_ID: 'fdd67221-13a8-4fc7-9764-c6f6ac35600f'
  
  NUGET_SOURCE_PATH: 'https://api.nuget.org/v3/index.json'
  
permissions: 
 id-token: write
 contents: write
 

jobs:

  export-unpack-commit:

    runs-on: ubuntu-latest
     
    steps:

    #checkout branch
     - name: create or checkout branch
       uses: actions/checkout@v4
       with:
        ref: dev
     - name: List files in the directory
       run:
         ls ${{ github.workspace }}

    #setup environment
     - name: setup .Net SDK
       uses: actions/setup-dotnet@3.0.2
       with:
        dotnet-version: '8.0.x'
        
     # - name: Add nuget source
     #  run: dotnet nuget add source ${{ env.NUGET_SOURCE_PATH }}

     
    #install power platform
     - name: install power platform tools
       uses: microsoft/powerplatform-actions/actions-install@v1.7.0
        
     - name: who am I?
       uses: microsoft/powerplatform-actions/who-am-i@v1.7.0
       with:
        app-id:  ${{ env.CLIENT_ID  }}
        client-secret: ${{secrets.PowerPlatformSPN}}       
        tenant-id:  ${{ env.TENANT_ID  }}
        environment-url:  ${{ env.ENVIRONMENT_URL  }}

     - name: export-solution action
       uses: microsoft/powerplatform-actions/export-solution@v1.7.0
       with:
        app-id:  ${{ env.CLIENT_ID  }}
        client-secret: ${{secrets.PowerPlatformSPN}}       
        tenant-id:  ${{ env.TENANT_ID  }}
        environment-url:  ${{ env.ENVIRONMENT_URL  }}
        solution-name: ${{ github.event.inputs.solution_name  }}
        solution-output-file: ${{ github.event.repository.name }}/${{github.event.inputs.solution_name }}_${{github.event.inputs.solution_version }}.unmanaged.zip
        overwrite: true

     - name: unpack-solution action
       uses: microsoft/powerplatform-actions/unpack-solution@v1.7.0
       with:
        solution-file: ${{ github.event.repository.name }}/${{github.event.inputs.solution_name }}_${{github.event.inputs.solution_version }}.unmanaged.zip
        solution-folder: ${{ github.event.repository.name }}/${{github.event.inputs.solution_name }}
        solution-type: 'Unmanaged'
        process-canvas-apps: true
        overwrite-files: true
        

        













       
    
